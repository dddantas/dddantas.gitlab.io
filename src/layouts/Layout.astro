---
import { ViewTransitions } from 'astro:transitions';

import Footer from '../components/Footer.astro';
import { SITE } from '../consts';

export interface Props {
  ogImage?: string;
  head?: {
    title?: string;
    description?: string;
  };
}

const {
  ogImage = 'og.png',
  head = {
    title: SITE.title,
    description: SITE.description,
  },
} = Astro.props;

const ogUrl = new URL(`${import.meta.env.BASE_URL}/${ogImage}`, Astro.url);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={`${import.meta.env.BASE_URL}/favicon.svg`}
    />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{head.title}</title>
    <meta name="title" content={head.title} />
    <meta name="author" content={SITE.author} />
    <meta name="description" content={head.description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={head.title} />
    <meta property="og:description" content={head.description} />
    <meta property="og:image" content={ogUrl} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={head.title} />
    <meta property="twitter:description" content={head.description} />
    <meta property="twitter:image" content={ogUrl} />

    <ViewTransitions />
  </head>
  <body>
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --black: 23, 23, 23;
    --white: 255, 255, 255;
    --gray: 109, 109, 109;
    --gray-light: 230, 230, 230;
    --gray-dark: 74, 74, 74;
    --box-shadow: 0 2px 6px rgba(var(--gray), 25%),
      0 8px 24px rgba(var(--gray), 33%), 0 16px 32px rgba(var(--gray), 33%);
  }
  body {
    margin: 0;
    padding: 0;
    text-align: left;
    background: rgb(var(--white));
    background-size: 100% 600px;
    word-wrap: break-word;
    overflow-wrap: break-word;
    color: rgb(var(-dark));
    font-size: 20px;
    line-height: 1.7;
  }
  main {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 3em 1em;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0 0 0.5rem 0;
    color: rgb(var(--black));
    line-height: 1.2;
  }
  h1 {
    font-size: 3.052em;
  }
  h2 {
    font-size: 2.441em;
  }
  h3 {
    font-size: 1.953em;
  }
  h4 {
    font-size: 1.563em;
  }
  h5 {
    font-size: 1.25em;
  }
  strong,
  b {
    font-weight: 700;
  }
  a {
    color: rgb(var(--black));
  }
  a:hover {
    color: rgb(var(--black));
  }
  p {
    margin-bottom: 1em;
  }
  .prose p {
    margin-bottom: 2em;
  }
  textarea {
    width: 100%;
    font-size: 16px;
  }
  input {
    font-size: 16px;
  }
  table {
    width: 100%;
  }
  img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
  }
  code {
    padding: 2px 5px;
    background-color: rgb(var(--gray-light));
    border-radius: 2px;
  }
  pre {
    padding: 1.5em;
    border-radius: 8px;
  }
  pre > code {
    all: unset;
  }
  blockquote {
    border-left: 4px solid var(--black);
    padding: 0 0 0 20px;
    margin: 0px;
    font-size: 1.333em;
  }
  hr {
    border: none;
    border-top: 1px solid rgb(var(--gray-light));
  }
  @media (max-width: 720px) {
    body {
      font-size: 18px;
    }
    main {
      padding: 1em;
    }
  }

  .sr-only {
    border: 0;
    padding: 0;
    margin: 0;
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    /* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
    clip: rect(1px 1px 1px 1px);
    /* maybe deprecated but we need to support legacy browsers */
    clip: rect(1px, 1px, 1px, 1px);
    /* modern browsers, clip-path works inwards from each corner */
    clip-path: inset(50%);
    /* added line to stop words getting smushed together (as they go onto separate lines and some screen readers do not understand line feeds as a space */
    white-space: nowrap;
  }
</style>
